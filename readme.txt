NOTE: Some of the drivers provided to test the code perform computationally expensive tasks (ie counting one-by-one from zero to a very large number) in order to show concurrency between threads. I tested these on the clamshell system and the delay between the completion of tasks is not very long, but may be different depending on the system used. These files have a value defined as DIVISOR than can be increased to make running time faster on slow machines.

This multithreading system uses timers and signals to alternate between thread execution. A timeslice of 10 microseconds is given, though this may not always be the exact amount of time given. A flag is set to make sure that if some particular task is being done that would have consequences if the context is switched, it will not be switched until finished. If the flag is not set and the timer expires, the signal handler will yield to another thread. Any number of threads may be created due to the use of a linked list type of data structure. In addition to the requirements of the assignment, I have implemented thread joining and mutex locks.

The makefile creates a static library which is used by the test drivers. The makefile also has some targeted clean instructions for removing specific files.
